                                      1 ;-------------------------------------------------------------------------------
                                      2 ;
                                      3 ; GBT Player v2.1.2
                                      4 ;
                                      5 ; Copyright (c) 2009-2018, Antonio Niño Díaz <antonio_nd@outlook.com>
                                      6 ; All rights reserved.
                                      7 ;
                                      8 ; Redistribution and use in source and binary forms, with or without
                                      9 ; modification, are permitted provided that the following conditions are met:
                                     10 ;
                                     11 ; * Redistributions of source code must retain the above copyright notice, this
                                     12 ;  list of conditions and the following disclaimer.
                                     13 ;
                                     14 ; * Redistributions in binary form must reproduce the above copyright notice,
                                     15 ;   this list of conditions and the following disclaimer in the documentation
                                     16 ;   and/or other materials provided with the distribution.
                                     17 ;
                                     18 ; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
                                     19 ; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
                                     20 ; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
                                     21 ; DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
                                     22 ; FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
                                     23 ; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
                                     24 ; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
                                     25 ; CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
                                     26 ; OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
                                     27 ; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                                     28 ;
                                     29 ;-------------------------------------------------------------------------------
                                     30 
                           00FF10    31 	.NR10 = 0xFF10
                           00FF11    32 	.NR11 = 0xFF11
                           00FF12    33 	.NR12 = 0xFF12
                           00FF13    34 	.NR13 = 0xFF13
                           00FF14    35 	.NR14 = 0xFF14
                           00FF16    36 	.NR21 = 0xFF16
                           00FF17    37 	.NR22 = 0xFF17
                           00FF18    38 	.NR23 = 0xFF18
                           00FF19    39 	.NR24 = 0xFF19
                           00FF1A    40 	.NR30 = 0xFF1A
                           00FF1B    41 	.NR31 = 0xFF1B
                           00FF1C    42 	.NR32 = 0xFF1C
                           00FF1D    43 	.NR33 = 0xFF1D
                           00FF1E    44 	.NR34 = 0xFF1E
                           00FF20    45 	.NR41 = 0xFF20
                           00FF21    46 	.NR42 = 0xFF21
                           00FF22    47 	.NR43 = 0xFF22
                           00FF23    48 	.NR44 = 0xFF23
                           00FF24    49 	.NR50 = 0xFF24
                           00FF25    50 	.NR51 = 0xFF25
                           00FF26    51 	.NR52 = 0xFF26
                                     52 
                                     53 ;-------------------------------------------------------------------------------
                                     54 
                                     55 	.area	_DATA
                                     56 
                                     57 ;-------------------------------------------------------------------------------
                                     58 
      000000                         59 gbt_playing::
      000000                         60 	.ds	1
                                     61 
      000001                         62 gbt_song:: ; pointer to the pointer array
      000001                         63 	.ds	2
      000003                         64 gbt_bank:: ; bank with the data
      000003                         65 	.ds 1
      000004                         66 gbt_speed:: ; playing speed
      000004                         67 	.ds 1
                                     68 
                                     69 ; Up to 12 bytes per step are copied here to be handled in bank 1
      000005                         70 gbt_temp_play_data::
      000005                         71 	.ds 12
                                     72 
      000011                         73 gbt_loop_enabled::
      000011                         74 	.ds 1
      000012                         75 gbt_ticks_elapsed::
      000012                         76 	.ds	1
      000013                         77 gbt_current_step::
      000013                         78 	.ds	1
      000014                         79 gbt_current_pattern::
      000014                         80 	.ds	1
      000015                         81 gbt_current_step_data_ptr:: ; pointer to next step data
      000015                         82 	.ds 2
                                     83 
      000017                         84 gbt_channels_enabled::
      000017                         85 	.ds	1
                                     86 
      000018                         87 gbt_pan:: ; Ch 1-4
      000018                         88 	.ds	4*1
      00001C                         89 gbt_vol:: ; Ch 1-4
      00001C                         90 	.ds	4*1
      000020                         91 gbt_instr:: ; Ch 1-4
      000020                         92 	.ds	4*1
      000024                         93 gbt_freq:: ; Ch 1-3
      000024                         94 	.ds	3*2
                                     95 
      00002A                         96 gbt_channel3_loaded_instrument:: ; current loaded instrument ($FF if none)
      00002A                         97 	.ds	1
                                     98 
                                     99 ; Arpeggio -> Ch 1-3
      00002B                        100 gbt_arpeggio_freq_index::
      00002B                        101 	.ds 3*3 ; { base index, base index + x, base index + y } * 3
      000034                        102 gbt_arpeggio_enabled::
      000034                        103 	.ds 3*1 ; if 0, disabled
      000037                        104 gbt_arpeggio_tick::
      000037                        105 	.ds	3*1
                                    106 
                                    107 ; Cut note
      00003A                        108 gbt_cut_note_tick::
      00003A                        109 	.ds	4*1 ; If tick == gbt_cut_note_tick, stop note.
                                    110 
                                    111 ; Last step of last pattern this is set to 1
      00003E                        112 gbt_have_to_stop_next_step::
      00003E                        113 	.ds 1
                                    114 
      00003F                        115 gbt_update_pattern_pointers::
      00003F                        116 	.ds 1 ; set to 1 by jump effects
                                    117 
                                    118 ;-------------------------------------------------------------------------------
                                    119 
                                    120 	.area	_CODE
                                    121 
                                    122 ;-------------------------------------------------------------------------------
                                    123 
      000000                        124 gbt_get_pattern_ptr:: ; a = pattern number
                                    125 
                                    126 	; loads a pointer to pattern a into gbt_current_step_data_ptr
                                    127 
      000000 5F                     128 	ld	e,a
      000001 16 00                  129 	ld	d,#0
                                    130 
      000003 FA 03 00               131 	ld	a,(gbt_bank)
      000006 EA 00 20               132 	ld	(#0x2000),a ; MBC1, MBC3, MBC5 - Set bank
                                    133 
      000009 21 01 00               134 	ld	hl,#gbt_song
      00000C 2A                     135 	ld	a,(hl+)
      00000D 6E                     136 	ld	l,(hl)
      00000E 67                     137 	ld	h,a
                                    138 
                                    139 	; hl = pointer to list of pointers
                                    140 	; de = pattern number
                                    141 
      00000F 19                     142 	add	hl,de
      000010 19                     143 	add	hl,de
                                    144 
                                    145 	; hl = pointer to pattern a pointer
                                    146 
      000011 2A                     147 	ld	a,(hl+)
      000012 66                     148 	ld	h,(hl)
      000013 6F                     149 	ld	l,a
                                    150 
                                    151 	; hl = pointer to pattern a data
                                    152 
      000014 7D                     153 	ld	a,l
      000015 EA 15 00               154 	ld	(gbt_current_step_data_ptr),a
      000018 7C                     155 	ld	a,h
      000019 EA 16 00               156 	ld	(gbt_current_step_data_ptr+1),a
                                    157 
      00001C C9                     158 	ret
                                    159 
                                    160 ;-------------------------------------------------------------------------------
                                    161 
      00001D                        162 _gbt_play::
                                    163 
      00001D C5                     164 	push	bc
                                    165 
      00001E F8 04                  166 	lda	hl,4(sp)
      000020 5E                     167 	ld	e,(hl)
      000021 23                     168 	inc	hl
      000022 56                     169 	ld	d,(hl)
      000023 23                     170 	inc	hl
      000024 4E                     171 	ld	c,(hl)
      000025 23                     172 	inc hl
      000026 46                     173 	ld	b,(hl)
                                    174 
                                    175 	; de = data
                                    176 	; b = speed , c = bank
                                    177 
      000027 21 01 00               178 	ld	hl,#gbt_song
      00002A 72                     179 	ld	(hl),d
      00002B 23                     180 	inc	hl
      00002C 73                     181 	ld	(hl),e
                                    182 
      00002D 79                     183 	ld	a,c
      00002E EA 03 00               184 	ld	(gbt_bank),a
      000031 78                     185 	ld	a,b
      000032 EA 04 00               186 	ld	(gbt_speed),a
                                    187 
      000035 3E 00                  188 	ld	a,#0
      000037 CD 00 00               189 	call	gbt_get_pattern_ptr
                                    190 
      00003A AF                     191 	xor	a,a
      00003B EA 13 00               192 	ld	(gbt_current_step),a
      00003E EA 14 00               193 	ld	(gbt_current_pattern),a
      000041 EA 12 00               194 	ld	(gbt_ticks_elapsed),a
      000044 EA 11 00               195 	ld	(gbt_loop_enabled),a
      000047 EA 3E 00               196 	ld	(gbt_have_to_stop_next_step),a
      00004A EA 3F 00               197 	ld	(gbt_update_pattern_pointers),a
                                    198 
      00004D 3E FF                  199 	ld	a,#0xFF
      00004F EA 2A 00               200 	ld	(gbt_channel3_loaded_instrument),a
                                    201 
      000052 3E 0F                  202 	ld	a,#0x0F
      000054 EA 17 00               203 	ld	(gbt_channels_enabled),a
                                    204 
      000057 21 18 00               205 	ld	hl,#gbt_pan
      00005A 3E 11                  206 	ld	a,#0x11 ; L and R
      00005C 22                     207 	ld	(hl+),a
      00005D CB 27                  208 	sla	a
      00005F 22                     209 	ld	(hl+),a
      000060 CB 27                  210 	sla	a
      000062 22                     211 	ld	(hl+),a
      000063 CB 27                  212 	sla	a
      000065 77                     213 	ld	(hl),a
                                    214 
      000066 21 1C 00               215 	ld	hl,#gbt_vol
      000069 3E F0                  216 	ld	a,#0xF0 ; 100%
      00006B 22                     217 	ld	(hl+),a
      00006C 22                     218 	ld	(hl+),a
      00006D 3E 20                  219 	ld	a,#0x20 ; 100%
      00006F 22                     220 	ld	(hl+),a
      000070 3E F0                  221 	ld	a,#0xF0 ; 100%
      000072 22                     222 	ld	(hl+),a
                                    223 
      000073 3E 00                  224 	ld	a,#0
                                    225 
      000075 21 20 00               226 	ld	hl,#gbt_instr
      000078 22                     227 	ld	(hl+),a
      000079 22                     228 	ld	(hl+),a
      00007A 22                     229 	ld	(hl+),a
      00007B 22                     230 	ld	(hl+),a
                                    231 
      00007C 21 24 00               232 	ld	hl,#gbt_freq
      00007F 22                     233 	ld	(hl+),a
      000080 22                     234 	ld	(hl+),a
      000081 22                     235 	ld	(hl+),a
      000082 22                     236 	ld	(hl+),a
      000083 22                     237 	ld	(hl+),a
      000084 22                     238 	ld	(hl+),a
                                    239 
      000085 EA 34 00               240 	ld	(gbt_arpeggio_enabled+0),a
      000088 EA 35 00               241 	ld	(gbt_arpeggio_enabled+1),a
      00008B EA 36 00               242 	ld	(gbt_arpeggio_enabled+2),a
                                    243 
      00008E 3E FF                  244 	ld	a,#0xFF
      000090 EA 3A 00               245 	ld	(gbt_cut_note_tick+0),a
      000093 EA 3B 00               246 	ld	(gbt_cut_note_tick+1),a
      000096 EA 3C 00               247 	ld	(gbt_cut_note_tick+2),a
      000099 EA 3D 00               248 	ld	(gbt_cut_note_tick+3),a
                                    249 
      00009C 3E 80                  250 	ld	a,#0x80
      00009E E0 26                  251 	ldh	(#.NR52),a
      0000A0 3E 00                  252 	ld	a,#0x00
      0000A2 E0 25                  253 	ldh	(#.NR51),a
      0000A4 3E 00                  254 	ld	a,#0x00 ; 0%
      0000A6 E0 24                  255 	ldh	(#.NR50),a
                                    256 
      0000A8 AF                     257 	xor	a,a
      0000A9 E0 10                  258 	ldh	(#.NR10),a
      0000AB E0 11                  259 	ldh	(#.NR11),a
      0000AD E0 12                  260 	ldh	(#.NR12),a
      0000AF E0 13                  261 	ldh	(#.NR13),a
      0000B1 E0 14                  262 	ldh	(#.NR14),a
      0000B3 E0 16                  263 	ldh	(#.NR21),a
      0000B5 E0 17                  264 	ldh	(#.NR22),a
      0000B7 E0 18                  265 	ldh	(#.NR23),a
      0000B9 E0 19                  266 	ldh	(#.NR24),a
      0000BB E0 1A                  267 	ldh	(#.NR30),a
      0000BD E0 1B                  268 	ldh	(#.NR31),a
      0000BF E0 1C                  269 	ldh	(#.NR32),a
      0000C1 E0 1D                  270 	ldh	(#.NR33),a
      0000C3 E0 1E                  271 	ldh	(#.NR34),a
      0000C5 E0 20                  272 	ldh	(#.NR41),a
      0000C7 E0 21                  273 	ldh	(#.NR42),a
      0000C9 E0 22                  274 	ldh	(#.NR43),a
      0000CB E0 23                  275 	ldh	(#.NR44),a
                                    276 
      0000CD 3E 77                  277 	ld	a,#0x77 ; 100%
      0000CF E0 24                  278 	ldh	(#.NR50),a
                                    279 
      0000D1 3E 01                  280 	ld	a,#0x01
      0000D3 EA 00 00               281 	ld	(gbt_playing),a
                                    282 
      0000D6 C1                     283 	pop	bc
      0000D7 C9                     284 	ret
                                    285 
                                    286 ;-------------------------------------------------------------------------------
                                    287 
      0000D8                        288 _gbt_pause::
      0000D8 F8 02                  289 	lda	hl,2(sp)
      0000DA 7E                     290 	ld	a,(hl)
      0000DB EA 00 00               291 	ld	(gbt_playing),a
      0000DE B7                     292 	or	a
      0000DF C8                     293 	ret	z
      0000E0 AF                     294 	xor	a
      0000E1 E0 24                  295 	ldh	(#.NR50),a
      0000E3 C9                     296 	ret
                                    297 
                                    298 ;-------------------------------------------------------------------------------
                                    299 
      0000E4                        300 _gbt_loop::
      0000E4 F8 02                  301 	lda	hl,2(sp)
      0000E6 7E                     302 	ld	a,(hl)
      0000E7 EA 11 00               303 	ld	(gbt_loop_enabled),a
      0000EA C9                     304 	ret
                                    305 
                                    306 ;-------------------------------------------------------------------------------
                                    307 
      0000EB                        308 _gbt_stop::
      0000EB AF                     309 	xor	a
      0000EC EA 00 00               310 	ld	(gbt_playing),a
      0000EF E0 24                  311 	ldh	(#.NR50),a
      0000F1 E0 25                  312 	ldh	(#.NR51),a
      0000F3 E0 26                  313 	ldh	(#.NR52),a
      0000F5 C9                     314 	ret
                                    315 
                                    316 ;-------------------------------------------------------------------------------
                                    317 
      0000F6                        318 _gbt_enable_channels::
      0000F6 F8 02                  319 	lda	hl,2(sp)
      0000F8 7E                     320 	ld	a,(hl)
      0000F9 EA 17 00               321 	ld	(gbt_channels_enabled),a
      0000FC C9                     322 	ret
                                    323 
                                    324 ;-------------------------------------------------------------------------------
                                    325 
      0000FD                        326 _gbt_update::
                                    327 
      0000FD C5                     328 	push	bc
                                    329 
                                    330 	; gbt_update has some "ret z" and things like that
                                    331 	; We call it from here to make it easier to mantain both
                                    332 	; RGBDS and GBDK versions.
      0000FE CD 03 01               333 	call	gbt_update
                                    334 
      000101 C1                     335 	pop	bc
                                    336 
      000102 C9                     337 	ret
                                    338 
                                    339 ;-------------------------------------------------------------------------------
                                    340 
      000103                        341 gbt_update:
                                    342 
      000103 FA 00 00               343 	ld	a,(gbt_playing)
      000106 B7                     344 	or	a,a
      000107 C8                     345 	ret	z ; If not playing, return
                                    346 
                                    347 	; Handle tick counter
                                    348 
      000108 21 12 00               349 	ld	hl,#gbt_ticks_elapsed
      00010B FA 04 00               350 	ld	a,(gbt_speed) ; a = total ticks
      00010E 46                     351 	ld	b,(hl) ; b = ticks elapsed
      00010F 04                     352 	inc	b
      000110 70                     353 	ld	(hl),b
      000111 B8                     354 	cp	a,b
      000112 28 09                  355 	jr	z,.dontexit
                                    356 
                                    357 	; Tick != Speed, update effects and exit
      000114 3E 01                  358 	ld	a,#0x01
      000116 EA 00 20               359 	ld	(#0x2000),a ; MBC1, MBC3, MBC5 - Set bank 1
      000119 CD 00 00               360 	call	gbt_update_effects_bank1 ; Call update function in bank 1
                                    361 
      00011C C9                     362 	ret
                                    363 
      00011D                        364 .dontexit:
      00011D 36 00                  365 	ld	(hl),#0x00 ; reset tick counter
                                    366 
                                    367 	; Clear tick-based effects
                                    368 	; ------------------------
                                    369 
      00011F AF                     370 	xor	a,a
      000120 21 34 00               371 	ld	hl,#gbt_arpeggio_enabled ; Disable arpeggio
      000123 22                     372 	ld	(hl+),a
      000124 22                     373 	ld	(hl+),a
      000125 77                     374 	ld	(hl),a
      000126 3D                     375 	dec	a ; a = 0xFF
      000127 21 3A 00               376 	ld	hl,#gbt_cut_note_tick ; Disable cut note
      00012A 22                     377 	ld	(hl+),a
      00012B 22                     378 	ld	(hl+),a
      00012C 22                     379 	ld	(hl+),a
      00012D 77                     380 	ld	(hl),a
                                    381 
                                    382 	; Update effects
                                    383 	; --------------
                                    384 
      00012E 3E 01                  385 	ld	a,#0x01
      000130 EA 00 20               386 	ld	(#0x2000),a ; MBC1, MBC3, MBC5 - Set bank 1
      000133 CD 00 00               387 	call	gbt_update_effects_bank1 ; Call update function in bank 1
                                    388 
                                    389 	; Check if last step
                                    390 	; ------------------
                                    391 
      000136 FA 3E 00               392 	ld	a,(gbt_have_to_stop_next_step)
      000139 B7                     393 	or	a,a
      00013A 28 09                  394 	jr	z,.dont_stop
                                    395 
      00013C CD EB 00               396 	call	_gbt_stop
      00013F 3E 00                  397 	ld	a,#0
      000141 EA 3E 00               398 	ld	(gbt_have_to_stop_next_step),a
      000144 C9                     399 	ret
                                    400 
      000145                        401 .dont_stop:
                                    402 
                                    403 	; Get this step data
                                    404 	; ------------------
                                    405 
                                    406 	; Change to bank with song data
                                    407 
      000145 FA 03 00               408 	ld	a,(gbt_bank)
      000148 EA 00 20               409 	ld	(#0x2000),a ; MBC1, MBC3, MBC5
                                    410 
                                    411 	; Get step data
                                    412 
      00014B FA 15 00               413 	ld	a,(gbt_current_step_data_ptr)
      00014E 6F                     414 	ld	l,a
      00014F FA 16 00               415 	ld	a,(gbt_current_step_data_ptr+1)
      000152 67                     416 	ld	h,a ; hl = pointer to data
                                    417 
      000153 11 05 00               418 	ld	de,#gbt_temp_play_data
                                    419 
      000156 06 04                  420 	ld	b,#4
      000158                        421 .copy_loop:	; copy as bytes as needed for this step
                                    422 
      000158 2A                     423 	ld	a,(hl+)
      000159 12                     424 	ld	(de),a
      00015A 13                     425 	inc	de
      00015B CB 7F                  426 	bit	7,a
      00015D 20 06                  427 	jr	nz,.more_bytes
      00015F CB 77                  428 	bit	6,a
      000161 28 0C                  429 	jr	z,.no_more_bytes_this_channel
                                    430 
      000163 18 07                  431 	jr	.one_more_byte
                                    432 
      000165                        433 .more_bytes:
                                    434 
      000165 2A                     435 	ld	a,(hl+)
      000166 12                     436 	ld	(de),a
      000167 13                     437 	inc	de
      000168 CB 7F                  438 	bit	7,a
      00016A 28 03                  439 	jr	z,.no_more_bytes_this_channel
                                    440 
      00016C                        441 .one_more_byte:
                                    442 
      00016C 2A                     443 	ld	a,(hl+)
      00016D 12                     444 	ld	(de),a
      00016E 13                     445 	inc	de
                                    446 
      00016F                        447 .no_more_bytes_this_channel:
      00016F 05                     448 	dec	b
      000170 20 E6                  449 	jr	nz,.copy_loop
                                    450 
      000172 7D                     451 	ld	a,l
      000173 EA 15 00               452 	ld	(gbt_current_step_data_ptr),a
      000176 7C                     453 	ld	a,h
      000177 EA 16 00               454 	ld	(gbt_current_step_data_ptr+1),a ; save pointer to data
                                    455 
                                    456 	; Increment step/pattern
                                    457 	; ----------------------
                                    458 
                                    459 	; Increment step
                                    460 
      00017A FA 13 00               461 	ld	a,(gbt_current_step)
      00017D 3C                     462 	inc	a
      00017E EA 13 00               463 	ld	(gbt_current_step),a
      000181 FE 40                  464 	cp	a,#64
      000183 20 2E                  465 	jr	nz,.dont_increment_pattern
                                    466 
                                    467 	; Increment pattern
                                    468 
      000185 3E 00                  469 	ld	a,#0
      000187 EA 13 00               470 	ld	(gbt_current_step),a ; Step 0
                                    471 
      00018A FA 14 00               472 	ld	a,(gbt_current_pattern)
      00018D 3C                     473 	inc	a
      00018E EA 14 00               474 	ld	(gbt_current_pattern),a
                                    475 
      000191 CD 00 00               476 	call	gbt_get_pattern_ptr
                                    477 
      000194 FA 15 00               478 	ld	a,(gbt_current_step_data_ptr)
      000197 47                     479 	ld	b,a
      000198 FA 16 00               480 	ld	a,(gbt_current_step_data_ptr+1)
      00019B B0                     481 	or	a,b
      00019C 20 15                  482 	jr	nz,.not_ended ; if pointer is 0, song has ended
                                    483 
      00019E FA 11 00               484 	ld	a,(gbt_loop_enabled)
      0001A1 A7                     485 	and	a,a
                                    486 
      0001A2 28 0A                  487 	jr	z,.loop_disabled
                                    488 
                                    489 	; If loop is enabled, jump to pattern 0
                                    490 
      0001A4 3E 00                  491 	ld	a,#0
      0001A6 EA 14 00               492 	ld	(gbt_current_pattern),a
                                    493 
      0001A9 CD 00 00               494 	call	gbt_get_pattern_ptr
                                    495 
      0001AC 18 05                  496 	jr	.end_handling_steps_pattern
                                    497 
      0001AE                        498 .loop_disabled:
                                    499 
                                    500 	; If loop is disabled, stop song
                                    501 	; Stop it next step, if not this step won't be played
                                    502 
      0001AE 3E 01                  503 	ld	a,#1
      0001B0 EA 3E 00               504 	ld	(gbt_have_to_stop_next_step),a
                                    505 
      0001B3                        506 .not_ended:
                                    507 
      0001B3                        508 .dont_increment_pattern:
                                    509 
      0001B3                        510 .end_handling_steps_pattern:
                                    511 
      0001B3 3E 01                  512 	ld	a,#0x01
      0001B5 EA 00 20               513 	ld	(#0x2000),a ; MBC1, MBC3, MBC5 - Set bank 1
      0001B8 CD 00 00               514 	call	gbt_update_bank1 ; Call update function in bank 1
                                    515 
                                    516 	; Check if any effect has changed the pattern or step
                                    517 
      0001BB FA 3F 00               518 	ld	a,(gbt_update_pattern_pointers)
      0001BE A7                     519 	and	a,a
      0001BF C8                     520 	ret	z
                                    521 	; if any effect has changed the pattern or step, update
                                    522 
      0001C0 AF                     523 	xor	a,a
      0001C1 EA 3F 00               524 	ld	(gbt_update_pattern_pointers),a ; clear update flag
                                    525 
      0001C4 EA 3E 00               526 	ld	(gbt_have_to_stop_next_step),a ; clear stop flag
                                    527 
      0001C7 FA 14 00               528 	ld	a,(gbt_current_pattern)
      0001CA CD 00 00               529 	call	gbt_get_pattern_ptr ; set ptr to start of the pattern
                                    530 
                                    531 	; Search the step
                                    532 
                                    533 	; Change to bank with song data
                                    534 
      0001CD FA 03 00               535 	ld	a,(gbt_bank)
      0001D0 EA 00 20               536 	ld	(#0x2000),a ; MBC1, MBC3, MBC5
                                    537 
      0001D3 FA 15 00               538 	ld	a,(gbt_current_step_data_ptr)
      0001D6 6F                     539 	ld	l,a
      0001D7 FA 16 00               540 	ld	a,(gbt_current_step_data_ptr+1)
      0001DA 67                     541 	ld	h,a ; hl = pointer to data
                                    542 
      0001DB FA 13 00               543 	ld	a,(gbt_current_step)
      0001DE A7                     544 	and	a,a
      0001DF C8                     545 	ret	z ; if changing to step 0, exit
                                    546 
      0001E0 CB 27                  547 	sla	a
      0001E2 CB 27                  548 	sla	a
      0001E4 47                     549 	ld	b,a ; b = iterations = step * 4 (number of channels)
      0001E5                        550 .next_channel:
                                    551 
      0001E5 2A                     552 	ld	a,(hl+)
      0001E6 CB 7F                  553 	bit	7,a
      0001E8 20 06                  554 	jr	nz,.next_channel_more_bytes
      0001EA CB 77                  555 	bit	6,a
      0001EC 28 08                  556 	jr	z,.next_channel_no_more_bytes_this_channel
                                    557 
      0001EE 18 05                  558 	jr	.next_channel_one_more_byte
                                    559 
      0001F0                        560 .next_channel_more_bytes:
                                    561 
      0001F0 2A                     562 	ld	a,(hl+)
      0001F1 CB 7F                  563 	bit	7,a
      0001F3 28 01                  564 	jr	z,.next_channel_no_more_bytes_this_channel
                                    565 
      0001F5                        566 .next_channel_one_more_byte:
                                    567 
      0001F5 2A                     568 	ld	a,(hl+)
                                    569 
      0001F6                        570 .next_channel_no_more_bytes_this_channel:
      0001F6 05                     571 	dec	b
      0001F7 20 EC                  572 	jr	nz,.next_channel
                                    573 
      0001F9 7D                     574 	ld	a,l
      0001FA EA 15 00               575 	ld	(gbt_current_step_data_ptr),a
      0001FD 7C                     576 	ld	a,h
      0001FE EA 16 00               577 	ld	(gbt_current_step_data_ptr+1),a ; save pointer to data
                                    578 
      000201 C9                     579 	ret
                                    580 
                                    581 ;-------------------------------------------------------------------------------
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (GameBoy Z80-like CPU), page 1.
Hexadecimal [24-Bits]

Symbol Table

    .NR10   =  00FF10     |     .NR11   =  00FF11     |     .NR12   =  00FF12 
    .NR13   =  00FF13     |     .NR14   =  00FF14     |     .NR21   =  00FF16 
    .NR22   =  00FF17     |     .NR23   =  00FF18     |     .NR24   =  00FF19 
    .NR30   =  00FF1A     |     .NR31   =  00FF1B     |     .NR32   =  00FF1C 
    .NR33   =  00FF1D     |     .NR34   =  00FF1E     |     .NR41   =  00FF20 
    .NR42   =  00FF21     |     .NR43   =  00FF22     |     .NR44   =  00FF23 
    .NR50   =  00FF24     |     .NR51   =  00FF25     |     .NR52   =  00FF26 
    .__.$$$.=  002710 L   |     .__.ABS.=  000000 G   |     .__.CPU.=  000000 L
    .__.H$L.=  000000 L   |   0 .copy_lo   000158 R   |   0 .dont_in   0001B3 R
  0 .dont_st   000145 R   |   0 .dontexi   00011D R   |   0 .end_han   0001B3 R
  0 .loop_di   0001AE R   |   0 .more_by   000165 R   |   0 .next_ch   0001E5 R
  0 .next_ch   0001F0 R   |   0 .next_ch   0001F6 R   |   0 .next_ch   0001F5 R
  0 .no_more   00016F R   |   0 .not_end   0001B3 R   |   0 .one_mor   00016C R
  0 _gbt_ena   0000F6 GR  |   0 _gbt_loo   0000E4 GR  |   0 _gbt_pau   0000D8 GR
  0 _gbt_pla   00001D GR  |   0 _gbt_sto   0000EB GR  |   0 _gbt_upd   0000FD GR
  1 gbt_arpe   000034 GR  |   1 gbt_arpe   00002B GR  |   1 gbt_arpe   000037 GR
  1 gbt_bank   000003 GR  |   1 gbt_chan   00002A GR  |   1 gbt_chan   000017 GR
  1 gbt_curr   000014 GR  |   1 gbt_curr   000013 GR  |   1 gbt_curr   000015 GR
  1 gbt_cut_   00003A GR  |   1 gbt_freq   000024 GR  |   0 gbt_get_   000000 GR
  1 gbt_have   00003E GR  |   1 gbt_inst   000020 GR  |   1 gbt_loop   000011 GR
  1 gbt_pan    000018 GR  |   1 gbt_play   000000 GR  |   1 gbt_song   000001 GR
  1 gbt_spee   000004 GR  |   1 gbt_temp   000005 GR  |   1 gbt_tick   000012 GR
  0 gbt_upda   000103 R   |     gbt_upda   ****** GX  |     gbt_upda   ****** GX
  1 gbt_upda   00003F GR  |   1 gbt_vol    00001C GR

ASxxxx Assembler V02.00 + NoICE + SDCC mods  (GameBoy Z80-like CPU), page 2.
Hexadecimal [24-Bits]

Area Table

   0 _CODE      size    202   flags    0
   1 _DATA      size     40   flags    0

